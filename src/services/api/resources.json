{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "info": {
    "description": "The REST API provide by the core REST module.",
    "title": "Institute for Human Centered Design - REST API",
    "version": "Versioning not supported"
  },
  "host": "localhost",
  "basePath": "",
  "securityDefinitions": {
    "csrf_token": {
      "type": "apiKey",
      "name": "X-CSRF-Token",
      "in": "header"
    },
    "basic_auth": {
      "type": "basic"
    }
  },
  "tags": [
    {
      "name": "node",
      "description": "Entity type: Content",
      "x-entity-type": "node"
    }
  ],
  "definitions": {
    "node": {
      "type": "object",
      "title": "node Schema",
      "description": "Describes the payload for \u0027node\u0027 entities.",
      "properties": {
        "nid": {
          "type": "array",
          "title": "ID",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "title": "Integer value"
              }
            },
            "required": [
              "value"
            ]
          },
          "minItems": 1,
          "maxItems": 1
        },
        "uuid": {
          "type": "array",
          "title": "UUID",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "Text value",
                "maxLength": 128
              }
            },
            "required": [
              "value"
            ]
          },
          "minItems": 1,
          "maxItems": 1
        },
        "vid": {
          "type": "array",
          "title": "Revision ID",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "title": "Integer value"
              }
            },
            "required": [
              "value"
            ]
          },
          "minItems": 1,
          "maxItems": 1
        },
        "langcode": {
          "type": "array",
          "title": "Language",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "Language code"
              }
            },
            "required": [
              "value"
            ]
          },
          "maxItems": 1
        },
        "type": {
          "type": "array",
          "title": "Content type",
          "items": {
            "type": "object",
            "properties": {
              "target_id": {
                "type": "string",
                "title": "Content type ID"
              }
            },
            "required": [
              "target_id"
            ]
          },
          "minItems": 1,
          "maxItems": 1
        },
        "status": {
          "type": "array",
          "title": "Publishing status",
          "description": "A boolean indicating the published state.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "title": "Boolean value"
              }
            },
            "required": [
              "value"
            ]
          },
          "default": [
            {
              "value": true
            }
          ],
          "maxItems": 1
        },
        "title": {
          "type": "array",
          "title": "Title",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "Text value",
                "maxLength": 255
              }
            },
            "required": [
              "value"
            ]
          },
          "minItems": 1,
          "maxItems": 1
        },
        "uid": {
          "type": "array",
          "title": "Authored by",
          "description": "The username of the content author.",
          "items": {
            "type": "object",
            "properties": {
              "target_id": {
                "type": "integer",
                "title": "User ID"
              }
            },
            "required": [
              "target_id"
            ],
            "title": "User",
            "description": "The referenced entity"
          },
          "maxItems": 1
        },
        "created": {
          "type": "array",
          "title": "Authored on",
          "description": "The time that the node was created.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "title": "Timestamp value",
                "format": "utc-millisec"
              }
            },
            "required": [
              "value"
            ]
          },
          "maxItems": 1
        },
        "changed": {
          "type": "array",
          "title": "Changed",
          "description": "The time that the node was last edited.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "title": "Timestamp value",
                "format": "utc-millisec"
              }
            },
            "required": [
              "value"
            ]
          },
          "maxItems": 1
        },
        "promote": {
          "type": "array",
          "title": "Promoted to front page",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "title": "Boolean value"
              }
            },
            "required": [
              "value"
            ]
          },
          "default": [
            {
              "value": true
            }
          ],
          "maxItems": 1
        },
        "sticky": {
          "type": "array",
          "title": "Sticky at top of lists",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "title": "Boolean value"
              }
            },
            "required": [
              "value"
            ]
          },
          "default": [
            {
              "value": false
            }
          ],
          "maxItems": 1
        },
        "revision_timestamp": {
          "type": "array",
          "title": "Revision timestamp",
          "description": "The time that the current revision was created.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "title": "Timestamp value",
                "format": "utc-millisec"
              }
            },
            "required": [
              "value"
            ]
          },
          "maxItems": 1
        },
        "revision_uid": {
          "type": "array",
          "title": "Revision user ID",
          "description": "The user ID of the author of the current revision.",
          "items": {
            "type": "object",
            "properties": {
              "target_id": {
                "type": "integer",
                "title": "User ID"
              }
            },
            "required": [
              "target_id"
            ],
            "title": "User",
            "description": "The referenced entity"
          },
          "maxItems": 1
        },
        "revision_log": {
          "type": "array",
          "title": "Revision log message",
          "description": "Briefly describe the changes you have made.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "title": "Text value"
              }
            },
            "required": [
              "value"
            ]
          },
          "default": [
            {
              "value": ""
            }
          ],
          "maxItems": 1
        },
        "revision_translation_affected": {
          "type": "array",
          "title": "Revision translation affected",
          "description": "Indicates if the last edit of a translation belongs to current revision.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "title": "Boolean value"
              }
            },
            "required": [
              "value"
            ]
          },
          "minItems": 1,
          "maxItems": 1
        },
        "default_langcode": {
          "type": "array",
          "title": "Default translation",
          "description": "A flag indicating whether this is the default translation.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "title": "Boolean value"
              }
            },
            "required": [
              "value"
            ]
          },
          "default": [
            {
              "value": true
            }
          ],
          "maxItems": 1
        },
        "path": {
          "type": "array",
          "title": "URL alias",
          "items": {
            "type": "object",
            "properties": {
              "alias": {
                "type": "string",
                "title": "Path alias"
              },
              "pid": {
                "type": "integer",
                "title": "Path id"
              }
            }
          },
          "minItems": 1,
          "maxItems": 1
        }
      },
      "required": [
        "nid",
        "uuid",
        "vid",
        "type",
        "title",
        "revision_translation_affected",
        "path"
      ],
      "discriminator": "type"
    },
    "node:article": {
      "allOf": [
        {
          "$ref": "#\/definitions\/node"
        },
        {
          "type": "object",
          "title": "node:article Schema",
          "description": "Use \u003Cem\u003Earticles\u003C\/em\u003E for time-sensitive content like news, press releases or blog posts.",
          "properties": {
            "body": {
              "type": "array",
              "title": "Body",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "title": "Text"
                  },
                  "format": {
                    "type": "string",
                    "title": "Text format"
                  },
                  "summary": {
                    "type": "string",
                    "title": "Summary"
                  }
                },
                "required": [
                  "value"
                ]
              },
              "maxItems": 1
            },
            "comment": {
              "type": "array",
              "title": "Comments",
              "items": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "title": "Comment status"
                  },
                  "cid": {
                    "type": "integer",
                    "title": "Last comment ID"
                  },
                  "last_comment_timestamp": {
                    "type": "integer",
                    "title": "Last comment timestamp",
                    "description": "The time that the last comment was created."
                  },
                  "last_comment_name": {
                    "type": "string",
                    "title": "Last comment name",
                    "description": "The name of the user posting the last comment."
                  },
                  "last_comment_uid": {
                    "type": "integer",
                    "title": "Last comment user ID"
                  },
                  "comment_count": {
                    "type": "integer",
                    "title": "Number of comments",
                    "description": "The number of comments."
                  }
                },
                "required": [
                  "status"
                ]
              },
              "minItems": 1,
              "default": [
                {
                  "status": 2,
                  "cid": 0,
                  "last_comment_name": "",
                  "last_comment_timestamp": 0,
                  "last_comment_uid": 0,
                  "comment_count": 0
                }
              ],
              "maxItems": 1
            },
            "field_image": {
              "type": "array",
              "title": "Image",
              "items": {
                "type": "object",
                "properties": {
                  "target_id": {
                    "type": "integer",
                    "title": "File ID"
                  },
                  "alt": {
                    "type": "string",
                    "title": "Alternative text",
                    "description": "Alternative image text, for the image\u0027s \u0027alt\u0027 attribute."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title",
                    "description": "Image title text, for the image\u0027s \u0027title\u0027 attribute."
                  },
                  "width": {
                    "type": "integer",
                    "title": "Width",
                    "description": "The width of the image in pixels."
                  },
                  "height": {
                    "type": "integer",
                    "title": "Height",
                    "description": "The height of the image in pixels."
                  }
                },
                "required": [
                  "target_id"
                ],
                "title": "File",
                "description": "The referenced entity"
              },
              "maxItems": 1
            },
            "field_tags": {
              "type": "array",
              "title": "Tags",
              "description": "Enter a comma-separated list. For example: Amsterdam, Mexico City, \u0022Cleveland, Ohio\u0022",
              "items": {
                "type": "object",
                "properties": {
                  "target_id": {
                    "type": "integer",
                    "title": "Taxonomy term ID"
                  }
                },
                "required": [
                  "target_id"
                ],
                "title": "Taxonomy term",
                "description": "The referenced entity"
              }
            }
          },
          "required": [
            "nid",
            "uuid",
            "vid",
            "type",
            "title",
            "revision_translation_affected",
            "path",
            "comment"
          ]
        }
      ]
    },
    "node:page": {
      "allOf": [
        {
          "$ref": "#\/definitions\/node"
        },
        {
          "type": "object",
          "title": "node:page Schema",
          "description": "Use \u003Cem\u003Ebasic pages\u003C\/em\u003E for your static content, such as an \u0027About us\u0027 page.",
          "properties": {
            "promote": {
              "type": "array",
              "title": "Promoted to front page",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "title": "Boolean value"
                  }
                },
                "required": [
                  "value"
                ]
              },
              "default": [
                {
                  "value": false
                }
              ],
              "maxItems": 1
            },
            "body": {
              "type": "array",
              "title": "Body",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "title": "Text"
                  },
                  "format": {
                    "type": "string",
                    "title": "Text format"
                  },
                  "summary": {
                    "type": "string",
                    "title": "Summary"
                  }
                },
                "required": [
                  "value"
                ]
              },
              "maxItems": 1
            }
          },
          "required": [
            "nid",
            "uuid",
            "vid",
            "type",
            "title",
            "revision_translation_affected",
            "path"
          ]
        }
      ]
    }
  },
  "paths": {
    "\/node\/{node}": {
      "get": {
        "parameters": [
          {
            "name": "_format",
            "in": "query",
            "type": "string",
            "enum": [
              "hal_json",
              "schema_json",
              "json"
            ],
            "required": true,
            "description": "Request format"
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The nid,id, of the node."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#\/definitions\/node"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad data"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error."
                }
              }
            }
          }
        },
        "tags": [
          "node"
        ],
        "summary": "Get a Content",
        "operationId": "entity:node:GET",
        "schemes": [
          "http"
        ],
        "security": [
          {
            "csrf_token": []
          }
        ]
      }
    }
  }
}
